{
  "version": 4,
  "terraform_version": "1.9.8",
  "serial": 161,
  "lineage": "fe2d7fb3-244d-595b-9923-72d787ebfed0",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "archive_file",
      "name": "source",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "exclude_symlink_directories": null,
            "excludes": null,
            "id": "048b93d43f2dd3d9fa551219155a29823ff6b69e",
            "output_base64sha256": "6cjlkPRL5ThP0szA0v+i+cvB+GxJIPgj+TxJIH6GMu4=",
            "output_base64sha512": "19Ge/k4u8HNM2+zL6o3vdEEy0uQUK831/CNFSRgrdqgH4VEB5jZXF8Gglu14CvWPsNjfF+6bX/xqfKz6mBEmpA==",
            "output_file_mode": null,
            "output_md5": "7284a33e2c5088d1284beef9864df1f0",
            "output_path": "./function.zip",
            "output_sha": "048b93d43f2dd3d9fa551219155a29823ff6b69e",
            "output_sha256": "e9c8e590f44be5384fd2ccc0d2ffa2f9cbc1f86c4920f823f93c49207e8632ee",
            "output_sha512": "d7d19efe4e2ef0734cdbeccbea8def744132d2e4142bcdf5fc234549182b76a807e15101e6365717c1a096ed780af58fb0d8df17ee9b5ffc6a7cacfa981126a4",
            "output_size": 1404,
            "source": [
              {
                "content": "functions-framework==3.*\nflask",
                "filename": "requirements.txt"
              },
              {
                "content": "import requests\nimport json\nimport os\nfrom dotenv import load_dotenv\nimport functions_framework\nimport flask\n\n\nload_dotenv(\".env\")\njamfapiurl=os.getenv(\"jamfapiurl\")\nclient_id = os.getenv(\"client_id\")\nclient_secret = os.getenv(\"client_secret\")\n\n\n\ndef GetJamfAccessToken():\n    headers={\n        \"Content-Type\" : \"application/x-www-form-urlencoded\"\n    }\n\n    body={\n        \"client_id\":client_id,\n        \"grant_type\":\"client_credentials\",\n        \"client_secret\":client_secret\n    }\n    response= requests.post(url=jamfapiurl+\"/api/oauth/token\",headers=headers,data=body)\n    return response.json()[\"access_token\"]\n\n\ndef GetJamfComputer():\n\n    bearerToken=GetJamfAccessToken()\n    headers={\n        \"Authorization\":\"Bearer \"+bearerToken,\n        \"Accept\":\"application/json\"\n    }\n    sections=\"GENERAL,USER_AND_LOCATION\" ###Supported Values are: GENERAL, DISK_ENCRYPTION, PURCHASING, APPLICATIONS, STORAGE, USER_AND_LOCATION, CONFIGURATION_PROFILES, PRINTERS, SERVICES, HARDWARE, LOCAL_USER_ACCOUNTS, CERTIFICATES, ATTACHMENTS, PLUGINS, PACKAGE_RECEIPTS, FONTS, SECURITY, OPERATING_SYSTEM, LICENSED_SOFTWARE, IBEACONS, SOFTWARE_UPDATES, EXTENSION_ATTRIBUTES, CONTENT_CACHING, GROUP_MEMBERSHIPS\n    pagesize=\"\u0026page=0\u0026page-size=2000\"\n    # apipreview=\"/api/preview/computers?section=\"\n    apiv1=\"/api/v1/computers-inventory?section=\"\n    response= requests.get(url=jamfapiurl+apiv1 + sections+pagesize,headers=headers)\n    if response.json()[\"totalCount\"] \u003e 2000:\n        data=response.json()[\"results\"]\n        page=response.json()[\"totalCount\"]/2000\n        i=1\n        while (i\u003cpage):\n            pagesize=\"\u0026page=\"+str(i)+\"\u0026page-size=2000\"\n            response= requests.get(url=jamfapiurl+apiv1 + sections+pagesize,headers=headers)\n            data=data+response.json()[\"results\"]\n            i+=1\n    return data\n\ndef GetComputerGroupMembers(id):\n    bearerToken=GetJamfAccessToken()\n    headers={\n        \"Authorization\":\"Bearer \"+bearerToken,\n        \"Accept\":\"application/json\"\n    }\n    apiv2 = \"/api/v2/computer-groups/smart-group-membership/\"+id\n    response = requests.get(url=jamfapiurl+apiv2, headers=headers)\n    return response.json()[\"results\"]\n\n@functions_framework.http\ndef main(request: flask.Request) -\u003e flask.Response:\n    response_dict = GetJamfComputer()\n    # javacomps=GetComputerGroupMembers(\"330\")\n\n    with open('computers.jsonl', 'w') as jsonl_output:\n        for entry in response_dict:\n            json.dump(entry, jsonl_output)\n            jsonl_output.write('\\n')\n\n\n    # with open('javajamfcomputers.jsonl', 'w') as jsonl_output:\n    #     for entry in javacomps:\n    #         json.dump(entry, jsonl_output)\n    #         jsonl_output.write('\\n')\n    return flask.Response(\"Success/or not\", mimetype=\"text/plain\")\n\n",
                "filename": "GetJamfdata.py"
              }
            ],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": null,
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "google_iam_policy",
      "name": "admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "audit_config": null,
            "binding": [
              {
                "condition": [],
                "members": [
                  "serviceAccount:246337671244-compute@developer.gserviceaccount.com"
                ],
                "role": "roles/storage.admin"
              }
            ],
            "id": "774375424",
            "policy_data": "{\"bindings\":[{\"members\":[\"serviceAccount:246337671244-compute@developer.gserviceaccount.com\"],\"role\":\"roles/storage.admin\"}]}"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "py_main",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "import requests\nimport json\nimport os\nfrom dotenv import load_dotenv\nimport functions_framework\nimport flask\n\n\nload_dotenv(\".env\")\njamfapiurl=os.getenv(\"jamfapiurl\")\nclient_id = os.getenv(\"client_id\")\nclient_secret = os.getenv(\"client_secret\")\n\n\n\ndef GetJamfAccessToken():\n    headers={\n        \"Content-Type\" : \"application/x-www-form-urlencoded\"\n    }\n\n    body={\n        \"client_id\":client_id,\n        \"grant_type\":\"client_credentials\",\n        \"client_secret\":client_secret\n    }\n    response= requests.post(url=jamfapiurl+\"/api/oauth/token\",headers=headers,data=body)\n    return response.json()[\"access_token\"]\n\n\ndef GetJamfComputer():\n\n    bearerToken=GetJamfAccessToken()\n    headers={\n        \"Authorization\":\"Bearer \"+bearerToken,\n        \"Accept\":\"application/json\"\n    }\n    sections=\"GENERAL,USER_AND_LOCATION\" ###Supported Values are: GENERAL, DISK_ENCRYPTION, PURCHASING, APPLICATIONS, STORAGE, USER_AND_LOCATION, CONFIGURATION_PROFILES, PRINTERS, SERVICES, HARDWARE, LOCAL_USER_ACCOUNTS, CERTIFICATES, ATTACHMENTS, PLUGINS, PACKAGE_RECEIPTS, FONTS, SECURITY, OPERATING_SYSTEM, LICENSED_SOFTWARE, IBEACONS, SOFTWARE_UPDATES, EXTENSION_ATTRIBUTES, CONTENT_CACHING, GROUP_MEMBERSHIPS\n    pagesize=\"\u0026page=0\u0026page-size=2000\"\n    # apipreview=\"/api/preview/computers?section=\"\n    apiv1=\"/api/v1/computers-inventory?section=\"\n    response= requests.get(url=jamfapiurl+apiv1 + sections+pagesize,headers=headers)\n    if response.json()[\"totalCount\"] \u003e 2000:\n        data=response.json()[\"results\"]\n        page=response.json()[\"totalCount\"]/2000\n        i=1\n        while (i\u003cpage):\n            pagesize=\"\u0026page=\"+str(i)+\"\u0026page-size=2000\"\n            response= requests.get(url=jamfapiurl+apiv1 + sections+pagesize,headers=headers)\n            data=data+response.json()[\"results\"]\n            i+=1\n    return data\n\ndef GetComputerGroupMembers(id):\n    bearerToken=GetJamfAccessToken()\n    headers={\n        \"Authorization\":\"Bearer \"+bearerToken,\n        \"Accept\":\"application/json\"\n    }\n    apiv2 = \"/api/v2/computer-groups/smart-group-membership/\"+id\n    response = requests.get(url=jamfapiurl+apiv2, headers=headers)\n    return response.json()[\"results\"]\n\n@functions_framework.http\ndef main(request: flask.Request) -\u003e flask.Response:\n    response_dict = GetJamfComputer()\n    # javacomps=GetComputerGroupMembers(\"330\")\n\n    with open('computers.jsonl', 'w') as jsonl_output:\n        for entry in response_dict:\n            json.dump(entry, jsonl_output)\n            jsonl_output.write('\\n')\n\n\n    # with open('javajamfcomputers.jsonl', 'w') as jsonl_output:\n    #     for entry in javacomps:\n    #         json.dump(entry, jsonl_output)\n    #         jsonl_output.write('\\n')\n    return flask.Response(\"Success/or not\", mimetype=\"text/plain\")\n\n",
            "content_base64": "aW1wb3J0IHJlcXVlc3RzCmltcG9ydCBqc29uCmltcG9ydCBvcwpmcm9tIGRvdGVudiBpbXBvcnQgbG9hZF9kb3RlbnYKaW1wb3J0IGZ1bmN0aW9uc19mcmFtZXdvcmsKaW1wb3J0IGZsYXNrCgoKbG9hZF9kb3RlbnYoIi5lbnYiKQpqYW1mYXBpdXJsPW9zLmdldGVudigiamFtZmFwaXVybCIpCmNsaWVudF9pZCA9IG9zLmdldGVudigiY2xpZW50X2lkIikKY2xpZW50X3NlY3JldCA9IG9zLmdldGVudigiY2xpZW50X3NlY3JldCIpCgoKCmRlZiBHZXRKYW1mQWNjZXNzVG9rZW4oKToKICAgIGhlYWRlcnM9ewogICAgICAgICJDb250ZW50LVR5cGUiIDogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIKICAgIH0KCiAgICBib2R5PXsKICAgICAgICAiY2xpZW50X2lkIjpjbGllbnRfaWQsCiAgICAgICAgImdyYW50X3R5cGUiOiJjbGllbnRfY3JlZGVudGlhbHMiLAogICAgICAgICJjbGllbnRfc2VjcmV0IjpjbGllbnRfc2VjcmV0CiAgICB9CiAgICByZXNwb25zZT0gcmVxdWVzdHMucG9zdCh1cmw9amFtZmFwaXVybCsiL2FwaS9vYXV0aC90b2tlbiIsaGVhZGVycz1oZWFkZXJzLGRhdGE9Ym9keSkKICAgIHJldHVybiByZXNwb25zZS5qc29uKClbImFjY2Vzc190b2tlbiJdCgoKZGVmIEdldEphbWZDb21wdXRlcigpOgoKICAgIGJlYXJlclRva2VuPUdldEphbWZBY2Nlc3NUb2tlbigpCiAgICBoZWFkZXJzPXsKICAgICAgICAiQXV0aG9yaXphdGlvbiI6IkJlYXJlciAiK2JlYXJlclRva2VuLAogICAgICAgICJBY2NlcHQiOiJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogICAgc2VjdGlvbnM9IkdFTkVSQUwsVVNFUl9BTkRfTE9DQVRJT04iICMjI1N1cHBvcnRlZCBWYWx1ZXMgYXJlOiBHRU5FUkFMLCBESVNLX0VOQ1JZUFRJT04sIFBVUkNIQVNJTkcsIEFQUExJQ0FUSU9OUywgU1RPUkFHRSwgVVNFUl9BTkRfTE9DQVRJT04sIENPTkZJR1VSQVRJT05fUFJPRklMRVMsIFBSSU5URVJTLCBTRVJWSUNFUywgSEFSRFdBUkUsIExPQ0FMX1VTRVJfQUNDT1VOVFMsIENFUlRJRklDQVRFUywgQVRUQUNITUVOVFMsIFBMVUdJTlMsIFBBQ0tBR0VfUkVDRUlQVFMsIEZPTlRTLCBTRUNVUklUWSwgT1BFUkFUSU5HX1NZU1RFTSwgTElDRU5TRURfU09GVFdBUkUsIElCRUFDT05TLCBTT0ZUV0FSRV9VUERBVEVTLCBFWFRFTlNJT05fQVRUUklCVVRFUywgQ09OVEVOVF9DQUNISU5HLCBHUk9VUF9NRU1CRVJTSElQUwogICAgcGFnZXNpemU9IiZwYWdlPTAmcGFnZS1zaXplPTIwMDAiCiAgICAjIGFwaXByZXZpZXc9Ii9hcGkvcHJldmlldy9jb21wdXRlcnM/c2VjdGlvbj0iCiAgICBhcGl2MT0iL2FwaS92MS9jb21wdXRlcnMtaW52ZW50b3J5P3NlY3Rpb249IgogICAgcmVzcG9uc2U9IHJlcXVlc3RzLmdldCh1cmw9amFtZmFwaXVybCthcGl2MSArIHNlY3Rpb25zK3BhZ2VzaXplLGhlYWRlcnM9aGVhZGVycykKICAgIGlmIHJlc3BvbnNlLmpzb24oKVsidG90YWxDb3VudCJdID4gMjAwMDoKICAgICAgICBkYXRhPXJlc3BvbnNlLmpzb24oKVsicmVzdWx0cyJdCiAgICAgICAgcGFnZT1yZXNwb25zZS5qc29uKClbInRvdGFsQ291bnQiXS8yMDAwCiAgICAgICAgaT0xCiAgICAgICAgd2hpbGUgKGk8cGFnZSk6CiAgICAgICAgICAgIHBhZ2VzaXplPSImcGFnZT0iK3N0cihpKSsiJnBhZ2Utc2l6ZT0yMDAwIgogICAgICAgICAgICByZXNwb25zZT0gcmVxdWVzdHMuZ2V0KHVybD1qYW1mYXBpdXJsK2FwaXYxICsgc2VjdGlvbnMrcGFnZXNpemUsaGVhZGVycz1oZWFkZXJzKQogICAgICAgICAgICBkYXRhPWRhdGErcmVzcG9uc2UuanNvbigpWyJyZXN1bHRzIl0KICAgICAgICAgICAgaSs9MQogICAgcmV0dXJuIGRhdGEKCmRlZiBHZXRDb21wdXRlckdyb3VwTWVtYmVycyhpZCk6CiAgICBiZWFyZXJUb2tlbj1HZXRKYW1mQWNjZXNzVG9rZW4oKQogICAgaGVhZGVycz17CiAgICAgICAgIkF1dGhvcml6YXRpb24iOiJCZWFyZXIgIitiZWFyZXJUb2tlbiwKICAgICAgICAiQWNjZXB0IjoiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIGFwaXYyID0gIi9hcGkvdjIvY29tcHV0ZXItZ3JvdXBzL3NtYXJ0LWdyb3VwLW1lbWJlcnNoaXAvIitpZAogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQodXJsPWphbWZhcGl1cmwrYXBpdjIsIGhlYWRlcnM9aGVhZGVycykKICAgIHJldHVybiByZXNwb25zZS5qc29uKClbInJlc3VsdHMiXQoKQGZ1bmN0aW9uc19mcmFtZXdvcmsuaHR0cApkZWYgbWFpbihyZXF1ZXN0OiBmbGFzay5SZXF1ZXN0KSAtPiBmbGFzay5SZXNwb25zZToKICAgIHJlc3BvbnNlX2RpY3QgPSBHZXRKYW1mQ29tcHV0ZXIoKQogICAgIyBqYXZhY29tcHM9R2V0Q29tcHV0ZXJHcm91cE1lbWJlcnMoIjMzMCIpCgogICAgd2l0aCBvcGVuKCdjb21wdXRlcnMuanNvbmwnLCAndycpIGFzIGpzb25sX291dHB1dDoKICAgICAgICBmb3IgZW50cnkgaW4gcmVzcG9uc2VfZGljdDoKICAgICAgICAgICAganNvbi5kdW1wKGVudHJ5LCBqc29ubF9vdXRwdXQpCiAgICAgICAgICAgIGpzb25sX291dHB1dC53cml0ZSgnXG4nKQoKCiAgICAjIHdpdGggb3BlbignamF2YWphbWZjb21wdXRlcnMuanNvbmwnLCAndycpIGFzIGpzb25sX291dHB1dDoKICAgICMgICAgIGZvciBlbnRyeSBpbiBqYXZhY29tcHM6CiAgICAjICAgICAgICAganNvbi5kdW1wKGVudHJ5LCBqc29ubF9vdXRwdXQpCiAgICAjICAgICAgICAganNvbmxfb3V0cHV0LndyaXRlKCdcbicpCiAgICByZXR1cm4gZmxhc2suUmVzcG9uc2UoIlN1Y2Nlc3Mvb3Igbm90IiwgbWltZXR5cGU9InRleHQvcGxhaW4iKQoK",
            "content_base64sha256": "KnJXTGY4iLlbAx3+H5GkDLkvcP0fLg4JZSu09NrPNlY=",
            "content_base64sha512": "DwFLrQdu9jnMgN4VFEn2JCDNgd2Va5+DeZ9nAr8iSJLlPqupGgYSb7bOx1D0ZdlKyWVlO5uYvskMIRA3qeOjLQ==",
            "content_md5": "7d70de5cd319b550a0e6c18e984be627",
            "content_sha1": "22813149ed4d6f66246b207eadc5819217a7da2c",
            "content_sha256": "2a72574c663888b95b031dfe1f91a40cb92f70fd1f2e0e09652bb4f4dacf3656",
            "content_sha512": "0f014bad076ef639cc80de151449f62420cd81dd956b9f83799f6702bf224892e53eaba91a06126fb6cec750f465d94ac965653b9b98bec90c211037a9e3a32d",
            "filename": "../automation/GetJamfdata.py",
            "id": "22813149ed4d6f66246b207eadc5819217a7da2c"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "py_req",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "functions-framework==3.*\nflask",
            "content_base64": "ZnVuY3Rpb25zLWZyYW1ld29yaz09My4qCmZsYXNr",
            "content_base64sha256": "hZGhH+qwse1Beytkd44QNZJkwV5IXhfQTH3660TBkkM=",
            "content_base64sha512": "IWYAIPauO46lG4aY2ddFVwoa5mlmeaVpT9APAcnmswKLmXyJRGl1ShQuyZGMfCX7jNniEc3rfKuUJsvDIANObg==",
            "content_md5": "ba3ccfdd3b23db7790538e6699ff48aa",
            "content_sha1": "2fea148c649f67b1ba44f79674ae022f819b8635",
            "content_sha256": "8591a11feab0b1ed417b2b64778e10359264c15e485e17d04c7dfaeb44c19243",
            "content_sha512": "21660020f6ae3b8ea51b8698d9d745570a1ae6696679a5694fd00f01c9e6b3028b997c894469754a142ec9918c7c25fb8cd9e211cdeb7cab9426cbc320034e6e",
            "filename": "../automation/requirements.txt",
            "id": "2fea148c649f67b1ba44f79674ae022f819b8635"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_bigquery_dataset",
      "name": "dataset",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access": [
              {
                "dataset": [],
                "domain": "",
                "group_by_email": "",
                "iam_member": "",
                "role": "OWNER",
                "routine": [],
                "special_group": "",
                "user_by_email": "narbeh.davoodian@deliveryhero.com",
                "view": []
              },
              {
                "dataset": [],
                "domain": "",
                "group_by_email": "",
                "iam_member": "",
                "role": "OWNER",
                "routine": [],
                "special_group": "projectOwners",
                "user_by_email": "",
                "view": []
              },
              {
                "dataset": [],
                "domain": "",
                "group_by_email": "",
                "iam_member": "",
                "role": "READER",
                "routine": [],
                "special_group": "projectReaders",
                "user_by_email": "",
                "view": []
              },
              {
                "dataset": [],
                "domain": "",
                "group_by_email": "",
                "iam_member": "",
                "role": "WRITER",
                "routine": [],
                "special_group": "projectWriters",
                "user_by_email": "",
                "view": []
              }
            ],
            "creation_time": 1731449030591,
            "dataset_id": "example_dataset",
            "default_collation": "",
            "default_encryption_configuration": [],
            "default_partition_expiration_ms": 0,
            "default_table_expiration_ms": 3600000,
            "delete_contents_on_destroy": false,
            "description": "This is a test description",
            "effective_labels": {
              "goog-terraform-provisioned": "true"
            },
            "etag": "aEQnQe5ih04KC1JLl8xCMQ==",
            "external_dataset_reference": [],
            "friendly_name": "test",
            "id": "projects/dh-ets-ei-4224/datasets/example_dataset",
            "is_case_insensitive": false,
            "labels": {},
            "last_modified_time": 1731449030591,
            "location": "EU",
            "max_time_travel_hours": "168",
            "project": "dh-ets-ei-4224",
            "resource_tags": {},
            "self_link": "https://bigquery.googleapis.com/bigquery/v2/projects/dh-ets-ei-4224/datasets/example_dataset",
            "storage_billing_model": "",
            "terraform_labels": {
              "goog-terraform-provisioned": "true"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_bigquery_table",
      "name": "table1",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "biglake_configuration": [],
            "clustering": null,
            "creation_time": 1731494019880,
            "dataset_id": "example_dataset",
            "deletion_protection": true,
            "description": "",
            "effective_labels": {
              "goog-terraform-provisioned": "true"
            },
            "encryption_configuration": [],
            "etag": "BLmpS4Mk6lWI0U+9iLgG0g==",
            "expiration_time": 1731497619880,
            "external_data_configuration": [],
            "friendly_name": "",
            "id": "projects/dh-ets-ei-4224/datasets/example_dataset/tables/table1",
            "labels": null,
            "last_modified_time": 1731494019946,
            "location": "EU",
            "materialized_view": [],
            "max_staleness": "",
            "num_bytes": 0,
            "num_long_term_bytes": 0,
            "num_rows": 0,
            "project": "dh-ets-ei-4224",
            "range_partitioning": [],
            "require_partition_filter": false,
            "resource_tags": null,
            "schema": "[{\"description\":\"The Permalink\",\"mode\":\"NULLABLE\",\"name\":\"permalink\",\"type\":\"STRING\"},{\"description\":\"State where the head office is located\",\"mode\":\"NULLABLE\",\"name\":\"state\",\"type\":\"STRING\"}]",
            "self_link": "https://bigquery.googleapis.com/bigquery/v2/projects/dh-ets-ei-4224/datasets/example_dataset/tables/table1",
            "table_constraints": [],
            "table_id": "table1",
            "table_replication_info": [],
            "terraform_labels": {
              "goog-terraform-provisioned": "true"
            },
            "time_partitioning": [],
            "type": "TABLE",
            "view": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "google_bigquery_dataset.dataset"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_cloudfunctions_function",
      "name": "Cloud_function",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "available_memory_mb": 256,
            "build_environment_variables": null,
            "build_service_account": "projects/dh-ets-ei-4224/serviceAccounts/246337671244-compute@developer.gserviceaccount.com",
            "build_worker_pool": "",
            "description": "Cloud-function will get trigger once file is uploaded in input-dh-ets-ei-4224",
            "docker_registry": "ARTIFACT_REGISTRY",
            "docker_repository": "",
            "effective_labels": {
              "goog-terraform-provisioned": "true"
            },
            "entry_point": "main",
            "environment_variables": {},
            "event_trigger": [],
            "https_trigger_security_level": "SECURE_OPTIONAL",
            "https_trigger_url": "https://europe-west3-dh-ets-ei-4224.cloudfunctions.net/Cloud-function-trigger-using-terraform",
            "id": "projects/dh-ets-ei-4224/locations/europe-west3/functions/Cloud-function-trigger-using-terraform",
            "ingress_settings": "ALLOW_ALL",
            "kms_key_name": "",
            "labels": {},
            "max_instances": 0,
            "min_instances": 0,
            "name": "Cloud-function-trigger-using-terraform",
            "project": "dh-ets-ei-4224",
            "region": "europe-west3",
            "runtime": "python312",
            "secret_environment_variables": [],
            "secret_volumes": [],
            "service_account_email": "dh-ets-ei-4224@appspot.gserviceaccount.com",
            "source_archive_bucket": "test-bucket-dhetsei-jamf2",
            "source_archive_object": "src-0fa39c919fb33caa72da7c97005554e7.zip",
            "source_repository": [],
            "status": "ACTIVE",
            "terraform_labels": {
              "goog-terraform-provisioned": "true"
            },
            "timeout": 60,
            "timeouts": null,
            "trigger_http": true,
            "version_id": "1",
            "vpc_connector": "",
            "vpc_connector_egress_settings": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.archive_file.source",
            "data.local_file.py_main",
            "data.local_file.py_req",
            "google_storage_bucket.bucket",
            "google_storage_bucket_object.archive",
            "null_resource.trigger"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "autoclass": [],
            "cors": [],
            "custom_placement_config": [],
            "default_event_based_hold": false,
            "effective_labels": {
              "goog-terraform-provisioned": "true"
            },
            "enable_object_retention": false,
            "encryption": [],
            "force_destroy": false,
            "hierarchical_namespace": [
              {
                "enabled": false
              }
            ],
            "id": "test-bucket-dhetsei-jamf2",
            "labels": {},
            "lifecycle_rule": [],
            "location": "EU",
            "logging": [],
            "name": "test-bucket-dhetsei-jamf2",
            "project": "dh-ets-ei-4224",
            "project_number": 246337671244,
            "public_access_prevention": "inherited",
            "requester_pays": false,
            "retention_policy": [],
            "rpo": "DEFAULT",
            "self_link": "https://www.googleapis.com/storage/v1/b/test-bucket-dhetsei-jamf2",
            "soft_delete_policy": [
              {
                "effective_time": "2024-11-12T22:03:53.029Z",
                "retention_duration_seconds": 604800
              }
            ],
            "storage_class": "STANDARD",
            "terraform_labels": {
              "goog-terraform-provisioned": "true"
            },
            "timeouts": null,
            "uniform_bucket_level_access": false,
            "url": "gs://test-bucket-dhetsei-jamf2",
            "versioning": [],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMCwidXBkYXRlIjoyNDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjMifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_iam_binding",
      "name": "binding",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "b/test-bucket-dhetsei-jamf2",
            "condition": [],
            "etag": "CAI=",
            "id": "b/test-bucket-dhetsei-jamf2/roles/storage.admin",
            "members": [
              "serviceAccount:246337671244-compute@developer.gserviceaccount.com",
              "user:narbeh.davoodian@deliveryhero.com"
            ],
            "role": "roles/storage.admin"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "google_storage_bucket.bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_iam_binding",
      "name": "binding1",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "b/gcf-sources-246337671244-europe-west3",
            "condition": [],
            "etag": "CAQ=",
            "id": "b/gcf-sources-246337671244-europe-west3/roles/storage.admin",
            "members": [
              "serviceAccount:246337671244-compute@developer.gserviceaccount.com",
              "user:narbeh.davoodian@deliveryhero.com"
            ],
            "role": "roles/storage.admin"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "archive",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "test-bucket-dhetsei-jamf2",
            "cache_control": "",
            "content": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/zip",
            "crc32c": "4jClvQ==",
            "customer_encryption": [],
            "detect_md5hash": "coSjPixQiNEoS+75hk3x8A==",
            "event_based_hold": false,
            "generation": 1731494020143488,
            "id": "test-bucket-dhetsei-jamf2-src-7284a33e2c5088d1284beef9864df1f0.zip",
            "kms_key_name": "",
            "md5hash": "coSjPixQiNEoS+75hk3x8A==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/test-bucket-dhetsei-jamf2/o/src-7284a33e2c5088d1284beef9864df1f0.zip?generation=1731494020143488\u0026alt=media",
            "metadata": null,
            "name": "src-7284a33e2c5088d1284beef9864df1f0.zip",
            "output_name": "src-7284a33e2c5088d1284beef9864df1f0.zip",
            "retention": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/test-bucket-dhetsei-jamf2/o/src-7284a33e2c5088d1284beef9864df1f0.zip",
            "source": "./function.zip",
            "storage_class": "STANDARD",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "data.archive_file.source",
            "data.local_file.py_main",
            "data.local_file.py_req",
            "google_storage_bucket.bucket",
            "null_resource.trigger"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "trigger",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4526967716988016857",
            "triggers": {
              "timestamp": "2024-11-13T10:33:40Z"
            }
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
